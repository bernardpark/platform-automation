# The inputs, outputs, params, filename, and filepath
# of this task file are part of its semantically versioned API.
# See our documentation for a detailed discussion of our semver API.
# See www.semver.org for an explanation of semantic versioning.

# code_snippet params-interpolate start yaml
---
platform: linux

inputs:
- name: config # contains the base configuration file
- name: vars # variable files to be made available
  optional: true

outputs:
- name: interpolated-files
#contains all the *.yml files from `files/` input but after interpolation

params:
  VARS_FILES:
  # - Filepath to the product vars yaml file
  # - The path is relative to root of the task build,
  #   so `vars` and `secrets` can be used.
  CONFIG_FILE: base.yml

run:
  path: bash
  args:
  - "-c"
  - |
    cat /var/version && echo ""
    set -eux

    CONFIG_FILE=$(om interpolate \
      --config ${VARS_FILES} \
      --path /config_file)

    OPS_FILES=$(om interpolate \
      --config ${VARS_FILES} \
      --path /ops_files)

    ops_files_args=("")
    for of in ${OPS_FILES}
    do
      ops_files_args+=("-o ${of}")
    done

    echo "Custom params-interpolate task"

    # ${ops_files_args[@] needs to be globbed to pass through properly
    # shellcheck disable=SC2068
    echo "Copy files from original config to interpolated-files"
    mkdir -p interpolated-files
    cd config
    cp -R . ../interpolated-files/
    cd ..

    bosh int "config/${CONFIG_FILE}" ${ops_files_args[@]} > interpolated-files/$CONFIG_FILE
# code_snippet params-interpolate end
